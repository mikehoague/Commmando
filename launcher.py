#!/usr/bin/env python
# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.5 on Sun Jul 21 20:35:58 2013

import wx

# begin wxGlade: extracode
# end wxGlade

class MyFrame(wx.Frame):

    commands = []


    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.label_4 = wx.StaticText(self, -1, "Name")
        self.cbo_command_name = wx.ComboBox(self, -1, choices=[], style=wx.CB_DROPDOWN)
        self.cmd_save_command = wx.Button(self, -1, "Save")
        self.cmd_delete = wx.Button(self, -1, "Delete")
        self.label_5 = wx.StaticText(self, -1, "Command")
        self.txt_command = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE | wx.TE_LINEWRAP | wx.TE_WORDWRAP)
        self.cmd_execute_comand = wx.Button(self, -1, "Execute")
        self.cmd_show_cmds = wx.Button(self, -1, "Show Saved Commands")
        self.static_line_2 = wx.StaticLine(self, -1)
        self.txt_message = wx.TextCtrl(self, -1, "", style=wx.TE_MULTILINE | wx.TE_READONLY | wx.TE_LINEWRAP | wx.TE_WORDWRAP)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_COMBOBOX, self.select_command, self.cbo_command_name)
        self.Bind(wx.EVT_BUTTON, self.save_command, self.cmd_save_command)
        self.Bind(wx.EVT_BUTTON, self.delete_command, self.cmd_delete)
        self.Bind(wx.EVT_BUTTON, self.execute_my_command, self.cmd_execute_comand)
        self.Bind(wx.EVT_BUTTON, self.show_commands, self.cmd_show_cmds)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("My Launcher")
        self.SetFont(wx.Font(16, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.cbo_command_name.SetMinSize((400, 29))
        self.txt_command.SetMinSize((400, 75))
        self.static_line_2.SetMinSize((636, 20))
        self.txt_message.SetMinSize((438, 200))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.FlexGridSizer(7, 1, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(2, 4, 2, 5)
        grid_sizer_2.Add(self.label_4, 0, 0, 0)
        grid_sizer_2.Add(self.cbo_command_name, 0, 0, 0)
        grid_sizer_2.Add(self.cmd_save_command, 0, 0, 0)
        grid_sizer_2.Add(self.cmd_delete, 0, 0, 0)
        grid_sizer_2.Add(self.label_5, 0, 0, 0)
        grid_sizer_2.Add(self.txt_command, 0, 0, 0)
        grid_sizer_2.Add(self.cmd_execute_comand, 0, 0, 0)
        grid_sizer_2.Add(self.cmd_show_cmds, 0, 0, 0)
        sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        sizer_1.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_1.Add(self.txt_message, 3, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        sizer_1.Fit(self)
        self.Layout()
        # end wxGlade
        import pickle
        self.commands = pickle.load(open("MyApps/launcher/commands.p", "rb"))
        for c in self.commands:
            self.cbo_command_name.Append(c.name)

    def execute_comand(self, command):
        from subprocess import Popen, PIPE
        p = Popen(command, shell=True, stdin=PIPE, stdout=PIPE, stderr=PIPE)
        r = p.communicate()
        self.txt_message.SetValue(r[0])

    def save_command(self, event):  # wxGlade: MyFrame.<event_handler>
        command_name = self.cbo_command_name.GetValue()
        command_text = self.txt_command.GetValue()
        command_index = len(self.commands) + 1
        #see if name is already in the list
        for c in self.commands:
            if(c.name == command_name):
                command_index = c.c_id
        #if this is not an update
        if(command_index > len(self.commands)):
            self.cbo_command_name.Append(command_name)
        command = Command(command_index, command_name, command_text)
        self.commands.append(command)
        import pickle
        pickle.dump(self.commands, open("MyApps/launcher/commands.p", "wb"))
        self.txt_message.SetValue('Command Saved')

    def execute_my_command(self, event):  # wxGlade: MyFrame.<event_handler>
        self.txt_message.SetValue('')
        command = self.txt_command.GetValue()
        self.execute_comand(command)

    def select_command(self, event):
        selected_command_name = self.cbo_command_name.GetSelection()
        self.txt_command.SetValue(self.commands[selected_command_name].text)

    def delete_command(self, event):
        selected_command_name = self.cbo_command_name.GetSelection()
        del self.commands[selected_command_name]
        import pickle
        pickle.dump(self.commands, open("MyApps/launcher/commands.p", "wb"))
        self.cbo_command_name.Delete(self.cbo_command_name.GetSelection())
        self.cbo_command_name.SetValue('')
        self.txt_command.SetValue('')
        self.txt_message.SetValue('')

    def show_commands(self, event):
        self.cbo_command_name.SetSelection(-1)
        self.txt_command.SetValue('')
        content = ''
        for c in self.commands:
            content += str(c.name + '\n')
        self.txt_message.SetValue(content)


class Command(object):
    c_id = 0
    name = ""
    text = ""

    def __init__(self, c_id, name, text):
        self.c_id = c_id
        self.name = name
        self.text = text


# end of class MyFrame
if __name__ == "__main__":
    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, -1, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()
